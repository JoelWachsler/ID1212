{"version":3,"sources":["../../src/net/game_broadcast_handler.js"],"names":["pushSnakes","io","snakes","emit","pushFood","food","pushGameArea","gameArea","pushGameOver","id","reason"],"mappings":";AACA;AACA;AACA,8D,8FAHA;;AAKA;;;;;;;AAOO,eAAeA,UAAf,CAA0BC,EAA1B,EAA8BC,MAA9B,EAAsC;AAC3CD,KAAGE,IAAH,CAAQ,eAAR,EAAyBD,MAAzB;AACD;;AAED;;;;;;;AAOO,eAAeE,QAAf,CAAwBH,EAAxB,EAA4BI,IAA5B,EAAkC;AACvCJ,KAAGE,IAAH,CAAQ,aAAR,EAAuBE,IAAvB;AACD;;AAED;;;;;;;AAOO,eAAeC,YAAf,CAA4BL,EAA5B,EAAgCM,QAAhC,EAA0C;AAC/CN,KAAGE,IAAH,CAAQ,kBAAR,EAA4BI,QAA5B;AACD;;AAED;;;;;;;AAOO,eAAeC,YAAf,CAA4BP,EAA5B,EAAgCQ,EAAhC,EAAoCC,MAApC,EAA4C;AACjDT,KAAGE,IAAH,CAAQ,WAAR,EAAqB;AACnBM,MADmB;AAEnBC,UAFmB,EAArB;;AAID","file":"game_broadcast_handler.js","sourcesContent":["//@ts-check\nimport Food from \"../game/food\";\nimport Snake from \"../game/snake\";\nimport Point from \"../game/point\";\n\n/**\n * Broadcasts information about a game to all players connected to the provided room.\n * \n * @param {*} io \n * @param {Snake[]} snakes\n * @api public\n */\nexport async function pushSnakes(io, snakes) {\n  io.emit(\"update_snakes\", snakes);\n}\n\n/**\n * Update food locations.\n * \n * @param {*} io \n * @param {Food[]} food \n * @api public\n */\nexport async function pushFood(io, food) {\n  io.emit(\"update_food\", food);\n}\n\n/**\n * Update the game area.\n * \n * @param {*} io \n * @param {Point[]} gameArea \n * @api public\n */\nexport async function pushGameArea(io, gameArea) {\n  io.emit(\"update_game_area\", gameArea);\n}\n\n/**\n * Tell a player that their game is over.\n * \n * @param {*} io \n * @param {String} reason Reason for game over.\n * @api public\n */\nexport async function pushGameOver(io, id, reason) {\n  io.emit(\"game_over\", {\n    id,\n    reason\n  });\n}\n"]}